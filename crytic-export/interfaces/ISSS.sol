pragma solidity ^0.8.20;

interface ISSS {
    event OwnershipTransferred(address, address);
    event Transfer(address, address, uint256);
    event Approval(address, address, uint256);
    event EIP712DomainChanged();
    event SetLiquidityPool(address, bool);
    event SetUnlimited(address, bool);
    event SetExcludeFromTax(address, bool);
    event ClaimGasFee(address, uint256);
    error OwnableUnauthorizedAccount(address);
    error OwnableInvalidOwner(address);
    error ERC20InsufficientBalance(address, uint256, uint256);
    error ERC20InvalidSender(address);
    error ERC20InvalidReceiver(address);
    error ERC20InsufficientAllowance(address, uint256, uint256);
    error ERC20InvalidApprover(address);
    error ERC20InvalidSpender(address);
    error InvalidAccountNonce(address, uint256);
    error ERC2612ExpiredSignature(uint256);
    error ERC2612InvalidSigner(address, address);
    function communityAddress() external returns (address);
    function devTaxReceiverAddress() external returns (address);
    function devTokenReceiverAddress() external returns (address);
    function buyTaxPercent() external returns (uint256);
    function sellTaxPercent() external returns (uint256);
    function devPercent() external returns (uint256);
    function communityPercent() external returns (uint256);
    function devTaxTokenAmountAvailable() external returns (uint256);
    function communityTaxTokenAmountAvailable() external returns (uint256);
    function devTokenAmountClaimable() external returns (uint256);
    function devTokenAmountRemain() external returns (uint256);
    function tradeVolume() external returns (uint256);
    function limitEnabled() external returns (bool);
    function maxAmountPerTx() external returns (uint256);
    function maxAmountPerAccount() external returns (uint256);
    function uniswapV2Pair() external returns (address);
    function uniswapV2Router() external returns (address);
    function blastGasModeContract() external returns (address);
    function ANTI_BOT_DETECT_DURATION() external returns (uint256);
    function ANTI_BOT_LOCK_DURATION() external returns (uint256);
    function startPoolTime() external returns (uint256);
    function botBuyTimes(address) external returns (uint256);
    function liquidityPools(address) external returns (bool);
    function unlimiteds(address) external returns (bool);
    function excludeFromTaxes(address) external returns (bool);
    function name() external view returns (string memory);
    function symbol() external view returns (string memory);
    function decimals() external view returns (uint8);
    function totalSupply() external view returns (uint256);
    function balanceOf(address) external view returns (uint256);
    function transfer(address,uint256) external returns (bool);
    function allowance(address,address) external view returns (uint256);
    function approve(address,uint256) external returns (bool);
    function transferFrom(address,address,uint256) external returns (bool);
    function permit(address,address,uint256,uint256,uint8,bytes32,bytes32) external;
    function nonces(address) external view returns (uint256);
    function DOMAIN_SEPARATOR() external view returns (bytes32);
    function burn(uint256) external;
    function burnFrom(address,uint256) external;
    function eip712Domain() external view returns (bytes1,string memory,string memory,uint256,address,bytes32,uint256[] memory);
    function owner() external view returns (address);
    function renounceOwnership() external;
    function transferOwnership(address) external;
    function initPool(uint256,uint256) external;
    function addLiquidity(uint256,uint256) external;
    function claimCommunityTax() external returns (uint256);
    function claimDevTax() external returns (uint256);
    function claimDevToken() external returns (uint256);
    function setExcludeFromTax(address,bool) external;
    function setCommunityAddress(address) external;
    function setDevAddress(address,address) external;
    function setLiquidityPool(address,bool) external;
    function setUnlimited(address,bool) external;
    function changeTaxPercent(uint256,uint256,uint256,uint256) external;
    function setLimitConfig(uint256,uint256) external;
    function setLimitEnabled(bool) external;
    function rescueToken(address,address,uint256) external;
    function rescueETH(uint256) external returns (bool);
    function claimGasFee(address) external;
    function configBlastPointsOperator(address,address) external;
}

