/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapFactory,
  IUniswapFactoryInterface,
} from "../../../contracts/SSS.sol/IUniswapFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUniswapFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapFactoryInterface {
    return new Interface(_abi) as IUniswapFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapFactory {
    return new Contract(address, _abi, runner) as unknown as IUniswapFactory;
  }
}
